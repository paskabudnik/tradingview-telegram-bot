import os
from flask import Flask, request
import requests
from dotenv import load_dotenv
from db import init_db, add_user, get_all_users  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —ç—Ç–æ—Ç –º–æ–¥—É–ª—å

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_SECRET = os.getenv("WEBHOOK_SECRET")

app = Flask(__name__)

def send_message(chat_id, text):
    url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": text,
        "parse_mode": "HTML"
    }
    requests.post(url, json=payload)

@app.route("/bot/<token>", methods=["POST"])
def telegram(token):
    if token != BOT_TOKEN:
        return {"error": "unauthorized"}, 403

    data = request.get_json()
    msg = data.get("message", {})
    chat = msg.get("chat", {})
    chat_id = chat.get("id")
    name = chat.get("first_name", "User")
    text = msg.get("text", "")

    if text == "/start":
        add_user(chat_id, name)
        send_message(chat_id, "‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Å–∏–≥–Ω–∞–ª—ã!")
    else:
        send_message(chat_id, "–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã.")

    return {"ok": True}

@app.route("/webhook", methods=["POST"])
def tradingview_webhook():
    if request.args.get("secret") != WEBHOOK_SECRET:
        return {"error": "unauthorized"}, 401

    data = request.json
    ticker = data.get("ticker", "N/A")
    signal = data.get("signal", "N/A")

    message = f"<b>üìà –°–∏–≥–Ω–∞–ª –æ—Ç TradingView</b>\n–¢–∏–∫–µ—Ä: <code>{ticker}</code>\n–°–∏–≥–Ω–∞–ª: <b>{signal}</b>"

    for user in get_all_users():
        send_message(user["chat_id"], message)

    return {"status": "ok"}, 200

@app.route("/")
def root():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# –í—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@app.route("/users", methods=["GET"])
def list_users():
    users = get_all_users()
    return {"users": users}

if __name__ == "__main__":
    init_db()
    # –õ–æ–∫–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    # app.run(debug=True, host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))

